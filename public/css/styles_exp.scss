body {
    font-family: Helvetica,sans-serif;
    //background-image: url(../asset/pastel.png) ;
}



#mega-grid {
    display: grid;
    grid-template-columns: repeat(5,1fr);
    grid-template-rows: repeat(5,1fr);
    grid-gap: 10px;

    padding: 10px;
    width: 100%;
    height: 100%;
}

#presentation {
    grid-row : 1/2 ;
    grid-column: 1/6;
    // background-color: #FFDFBA;
}



#display{
    grid-row : 1/6;
    grid-column : 3/6;
    display : grid ;
    grid-template-columns: 1fr ,1fr ;
    grid-template-rows:  1fr ,1fr ;
}

#presentation-content {
    padding: 25px  ;
    display: flex;
    align-items: center;
    justify-content: center;
}

#display1{
    grid-column: 1/2 ;
    grid-row: 1/2 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
#display2{
    grid-column: 2/3 ;
    grid-row: 1/2 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
#display3{
    grid-column: 1/2 ;
    grid-row: 2/3 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
#display4{
    grid-column: 2/3 ;
    grid-row: 2/3 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

#control-panel {
    grid-row: 1/ 6;
    grid-column: 1/3 ;
    // background-color: #FFE8B3;
    display: grid;
    align-items: center;
    justify-content: center;
    grid-template-columns: repeat(4,1fr);
    grid-template-rows: repeat(3,1fr);
}

#rectangles{
    grid-row: 3/4;
    grid-column: 1/5 ;
    display: grid;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width : 100%;
    grid-template-columns: repeat(4,1fr);
    // background-color: #E2FFBA
}

#area1 {
    grid-column: 1/2 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
#area2 {
    grid-column: 2/3 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
#area3 {
    grid-column: 3/4 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
#area4 {
    grid-column: 4/5 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}

#arbre{
    grid-row: 1/3;
    grid-column : 1/5 ; 
    grid-template-columns: repeat(8,1fr);
    grid-template-rows: repeat(5,1fr);
}

#arbre-bas{
    grid-column: 1/9 ;
    grid-row : 3/4 ;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;

}
#arbre-haut{
    grid-row: 2/3;
    grid-column: 1/9;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row ;
}
#pres-control-panel {
    display: flex;
    align-items: center;
    justify-content: center;
}

#button-submit{
    grid-row: 4/5;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;

}

form {
    display:flex;
}

.navbar{
    z-index: 0 ;
    width: 100%;
    height: 10%;
    flex-direction: row;
    
}

#bar1{
    margin: 25px auto;
}

#bar2{
    margin: 25px auto;
    flex-direction: row;
}
#bar3{
    margin: 25px auto;
    flex-direction: row;
}


$breakpoints: (
    sm: (
        min: 576px,
        max: 575.98px,
    ),
    md: (
        min: 768px,
        max: 767.98px
    ),
    lg: (
        min: 992px,
        max: 991.98px
    ),
    xl: (
        min: 1200px,
        max: 1199.98px
    ),
    xxl: (
      min: 1400px,
      max: 1399.98px,
    )
);

@mixin breakpoint($breakpoint, $direction: min) {
    
    //check if the supplied breakpoint exists in our breakpoits map
    @if map-has-key($breakpoints, $breakpoint) { 
        $breakpoint-values: map-get($breakpoints, $breakpoint);
        $breakpoint-min: map-get($breakpoint-values, min);
        $breakpoint-max: map-get($breakpoint-values, max);

        //check if we are writing styles for larger or smaller screens
        @if $direction == min {
            @media (min-width: $breakpoint-min) {
                @content;
            }
        }

        @else {
            @media (max-width: $breakpoint-max) {
                @content;
            }
        }
    
    // use the custom value if the breakpoint is not part of the pre-defined list
    } @else {
        
        @if $direction == min {
            @media (min-width: $breakpoint) {
                @content;
            }
        }

        @else {
            @media (max-width: $breakpoint) {
                @content;
            }
        }
    }
}